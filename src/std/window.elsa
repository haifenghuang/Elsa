// A handle to a win32 window
struct WindowHandle {};

// Creates a win32 window with the specified title, width and height and returns the handle
native fn CreateWindowHandle(String title, int width, int height) : WindowHandle;

// Opens the specified window 
native fn OpenWindowHandle(WindowHandle w);

// Closes the specified window 
native fn CloseWindowHandle(WindowHandle w);

// Forces the specified window to update
native fn UpdateWindowHandle(WindowHandle w);

// Draws a rectangle in the specified window
native fn FillRect(WindowHandle w, int x, int y, int width, int height, int r, int g, int b);

// Checks if a key is currently down(pressed) for the specified window, returns true if it is otherwise false
native fn KeyDown(WindowHandle w, int keycode) : bool;

struct Window
{
	WindowHandle handle;

	fn Open() {
		OpenWindowHandle(handle);
	}

	fn Update() {
		UpdateWindowHandle(handle);
	}

	fn FillRect(int x, int y, int width, int height, int r, int g, int b) {
		FillRect(handle, x, y, width, height, r, g, b);
	}

	fn Clear() {
		FillRect(0, 0, 800, 600, 255, 255, 255);
	}

	fn KeyDown(int keycode) : bool {
		return KeyDown(handle, keycode);
	}
};

fn CreateWindow(String title, int width, int height) : Window {
	return new Window { handle: CreateWindowHandle(title, width, height) };
}
