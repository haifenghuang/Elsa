import "std/io";

struct String
{
	char[] str;

	func CharAt(int i) : char
	{
		return str[i];
	}

	func Length() : int
	{
		return str.Length();
	}

	func Concat(String other) : String
	{
		var newStr = new String {
			str: new char[Length() + other.Length()]
		};

		loop(var i = 0; i < Length(); i++)
		{
			newStr.str.Push(str[i]);
		}
		
		loop(var ii = 0; ii < other.Length(); ii++)
		{
			newStr.str.Push(other.str[ii]);
		}

		return newStr;
	}

	func Substring(int startIndex, int length) : String
	{
		var newStr = new String {
			str: new char[length]
		};

		// TODO: Error checking, validate start and length
		int stopIndex = startIndex + length;
		loop(var i = startIndex; i < stopIndex; i++)
		{
			newStr.str.Push(str[i]);
		}

		return newStr;
	}

	func Equals(String other) : bool
	{
		if(Length() != other.Length())
		{
			return false;
		}
	
		loop(var i = 0; i < Length(); i++)
		{
			if(str[i] != other.str[i])
			{
				return false;
			}
		}
	
		return true;
	}
};
