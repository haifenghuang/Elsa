import "std/assert";

struct MyStruct
{
	int IntField;
	int IntFieldAgain;
	float FloatField;
	char CharField;
	bool BoolField;
};

struct MyOtherStruct
{
	int IntField;
	float FloatField;
	char CharField;
	bool BoolField;
	MyStruct StructField;
};

struct MyArrayStruct
{
	int IntField;
	float FloatField;
	int[] ArrayField;
};

func NewStructTest()
{
	var s = new MyStruct;
	AssertEq(0, s.IntField);
	AssertEq(0.0, s.FloatField);
	AssertEq('\0', s.CharField);
	AssertEq(false, s.BoolField);
}

func StructFieldsTest()
{
	var s = new MyOtherStruct;

	AssertEq(0, s.IntField);
	AssertEq(0.0, s.FloatField);
	AssertEq('\0', s.CharField);
	AssertEq(false, s.BoolField);

	s.IntField = 10;
	s.FloatField = 10.0;
	s.CharField = '!';
	s.BoolField = true;

	var s2 = new MyStruct;
	s2.IntField = 10;
	s2.FloatField = 10.0;
	s2.CharField = '!';
	s2.BoolField = true;

	s.StructField = s2;

	AssertEq(10, s.IntField);
	AssertEq(10.0, s.FloatField);
	AssertEq('!', s.CharField);
	AssertEq(true, s.BoolField);
	AssertEq(s2, s.StructField);

	AssertEq(10, s.StructField.IntField);
	AssertEq(10.0, s.StructField.FloatField);
	AssertEq('!', s.StructField.CharField);
	AssertEq(true, s.StructField.BoolField);
}

func StructReferenceEqualsTest()
{
	var x = new MyOtherStruct;
	var y = new MyOtherStruct;

	AssertEq(true, x == x);
	AssertEq(false, x != x);

	AssertEq(false, y == x);
	AssertEq(true, y != x);
}

func StructInitializerListTest()
{
	var i = 10;
	var b = true;
	var c = 'X';
	var f = 13.37;

	var s = new MyOtherStruct {
		IntField: i,
		FloatField: f,
		CharField: c,
		BoolField: b,
	};
	
	AssertEq(i, s.IntField);
	AssertEq(f, s.FloatField);
	AssertEq(c, s.CharField);
	AssertEq(b, s.BoolField);

	var s2 = new MyOtherStruct {
		IntField: 10,
		FloatField: 10.0,
		CharField: 'A',
		BoolField: true,
		StructField: new MyStruct {
			IntField: i,
			FloatField: f,
			CharField: c,
			BoolField: b,
		}
	};

	AssertEq(10, s2.IntField);
	AssertEq(10.0, s2.FloatField);
	AssertEq('A', s2.CharField);
	AssertEq(true, s2.BoolField);

	AssertEq(i, s2.StructField.IntField);
	AssertEq(f, s2.StructField.FloatField);
	AssertEq(c, s2.StructField.CharField);
	AssertEq(b, s2.StructField.BoolField);

	var s3 = new MyArrayStruct {
		IntField: 10,
		FloatField: 10.0,
		ArrayField: new [ 1, 2, 3, 4, 5 ]
	};

	AssertEq(10, s3.IntField);
	AssertEq(10.0, s3.FloatField);
	AssertEq(5, s3.ArrayField.Length())

	AssertEq(1, s3.ArrayField[0])
	AssertEq(2, s3.ArrayField[1])
	AssertEq(3, s3.ArrayField[2])
	AssertEq(4, s3.ArrayField[3])
	AssertEq(5, s3.ArrayField[4])
}