struct vec2D
{
	int x;
	int y;
};

struct player
{
	vec2D position;
	int speed;
};

func void postfix()
{
	var x = 20;
	x++;
	elsa.PrintLn(x);
	x--;
	elsa.PrintLn(x);
}

func void loops()
{
	loop(var i = 0; i < 10; i++)
	{
		elsa.PrintLn(i);
	}
}

func void cond_print()
{
	if(6 > 5 || false)
	{
		elsa.PrintLn(7000);
	}
	
	if(4 < 5 && false)
	{
		elsa.PrintLn(7001);
	}

	if(99 >= 99)
	{
		elsa.PrintLn(7002);
	}

	if(99 >= 100)
	{
		elsa.PrintLn(7003);
	}

	if(99 <= 100)
	{
		elsa.PrintLn(7004);
	}

	if(99 <= 99)
	{
		elsa.PrintLn(7005);
	}

	if(99 <= 200 &&  88 >= 99)
	{
		elsa.PrintLn(7006);
	}

	if(99 <= 200 ||  88 >= 99)
	{
		elsa.PrintLn(7007);
	}

	if(100 == 2)
	{
		elsa.PrintLn(8000);
	}

	if(100 != 2)
	{
		elsa.PrintLn(8001);
	}

	if(100 == 100)
	{
		elsa.PrintLn(8002);
	}

	if(100 != 100)
	{
		elsa.PrintLn(8003);
	}
}

func void print_sum(int a, int b)
{
	elsa.PrintLn(a + b);
}

func void cond_print2()
{
	if(false && false || false || true)
	{
		elsa.PrintLn(777);
	}

	if(false)
	{
		elsa.PrintLn(888);
	}
	else
	{
		elsa.PrintLn(999);
	}

	if(true)
	{
		elsa.PrintLn(1000);
	}
	else
	{
		elsa.PrintLn(2000);
	}
}

func int main(int dummy)
{
	postfix();
	cond_print();
	cond_print2();

	var x = 1 + 2 * 6;

	var arg = 100 + 300 * 10;
	print_sum(100, arg);

	var y = 10;
	var z = 1230120839;
	var f = 10.89;
	var c = 'X';
	var b = false;

	var vec = new vec2D;
	vec.x = 10;
	vec.y = 20;
	
	elsa.PrintLn(vec.x);
	elsa.PrintLn(vec.y);
	
	var player = new player;
	player.speed = 11;
	player.position = new vec2D;
	player.position.x = 56;
	
	elsa.PrintLn(player.position.x);
	elsa.PrintLn(player.speed);
	
	elsa.PrintLn(x);
	elsa.PrintLn(y);
	elsa.Print(10);
	elsa.Print(10);
	elsa.PrintLn(77);
	elsa.PrintLn(z);
	elsa.PrintLn(f);
	elsa.PrintLn(c);
	elsa.PrintLn(b);
	elsa.PrintLn(x + y);
}